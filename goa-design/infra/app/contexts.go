// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "RESTAPI": Application Contexts
//
// Command:
// $ goagen
// --design=MYGO/studying/goa-design/design
// --out=$(GOPATH)/src/MYGO/studying/goa-design/infra
// --version=v1.3.1

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// ListPartnerContext provides the Partner List action context.
type ListPartnerContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewListPartnerContext parses the incoming request URL and body, performs validations and creates the
// context used by the Partner controller List action.
func NewListPartnerContext(ctx context.Context, r *http.Request, service *goa.Service) (*ListPartnerContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ListPartnerContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ListPartnerContext) OK(r *GoaPartner) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.goa.partner+json")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}

// InternalServerError sends a HTTP response with status code 500.
func (ctx *ListPartnerContext) InternalServerError() error {
	ctx.ResponseData.WriteHeader(500)
	return nil
}
